name: docker

on:
  push:
    tags:
      - "v*"

env:
  DOCKER_REPO: ghcr.io/${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
          #- linux/arm/v6
          #- linux/arm/v7

    steps:
      - name: Set vars
        id: vars
        run: |
          echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          echo "platform=$(echo -n ${{ matrix.platform }} | sed 's/\//-/g')" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: ${{ matrix.platform }}
          tags: |
            ${{ env.DOCKER_REPO }}:${{ steps.vars.outputs.version }}-${{ steps.vars.outputs.platform }}

  release:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: build

    steps:
      - name: Set vars
        id: vars
        run: |
          echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push Docker manifest
        run: |
          docker manifest create ${{ env.DOCKER_REPO }}:latest \
            ${{ env.DOCKER_REPO }}:${{ steps.vars.outputs.version }}-linux-amd64 \
            ${{ env.DOCKER_REPO }}:${{ steps.vars.outputs.version }}-linux-arm64
            #${{ env.DOCKER_REPO }}:${{ steps.vars.outputs.version }}-linux-arm-v6 \
            #${{ env.DOCKER_REPO }}:${{ steps.vars.outputs.version }}-linux-arm-v7
          docker manifest push ${{ env.DOCKER_REPO }}:latest
